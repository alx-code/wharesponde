{"ast":null,"code":"var _jsxFileName = \"/Users/alexramos/Repos/KexeMx/wharesponde/wharesponde/server/client/src/features/LogosSection/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from './LogosSection.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogosSection = () => {\n  _s();\n  const [logos, setLogos] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Simular llamada a una API para obtener logos\n    const fetchLogos = async () => {\n      try {\n        setIsLoading(true);\n        // En un caso real, aquí harías una petición fetch o axios a tu backend\n        // Ejemplo: const response = await fetch('/api/public/logos');\n        // const data = await response.json();\n\n        // Datos de ejemplo (los mismos que teníamos)\n        const exampleLogos = [{\n          id: 1,\n          name: 'Kibot',\n          src: '/logos/kibot.png'\n        }, {\n          id: 2,\n          name: 'Kexe',\n          src: '/logos/kexe.png'\n        }, {\n          id: 3,\n          name: 'Kuvo',\n          src: '/logos/kuvo.png'\n        }\n        // Añade más logos según sea necesario\n        ];\n\n        // Simular un delay de red\n        setTimeout(() => {\n          setLogos(exampleLogos);\n          setIsLoading(false);\n        }, 1000);\n      } catch (err) {\n        setError(err);\n        setIsLoading(false);\n      }\n    };\n    fetchLogos();\n  }, []); // El array vacío asegura que esto se ejecute solo una vez al montar\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.logosSection,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Cargando logos...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 87\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 53\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.logosSection,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Error al cargar logos: \", error.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 87\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 53\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.logosSection,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.heading,\n        children: \"Verificado por las marcas m\\xE1s din\\xE1micas en mercados emergentes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.logosGrid,\n        children: logos.map(logo => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.logoItem,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.logoText,\n            children: [\"<\", logo.name, \">\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, logo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(LogosSection, \"NDq5xgWUvMOMWnSTouEFN5A73Rc=\");\n_c = LogosSection;\nexport default LogosSection;\nvar _c;\n$RefreshReg$(_c, \"LogosSection\");","map":{"version":3,"names":["React","useState","useEffect","styles","jsxDEV","_jsxDEV","LogosSection","_s","logos","setLogos","isLoading","setIsLoading","error","setError","fetchLogos","exampleLogos","id","name","src","setTimeout","err","className","logosSection","children","container","fileName","_jsxFileName","lineNumber","columnNumber","message","heading","logosGrid","map","logo","logoItem","logoText","_c","$RefreshReg$"],"sources":["/Users/alexramos/Repos/KexeMx/wharesponde/wharesponde/server/client/src/features/LogosSection/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from './LogosSection.module.css';\n\nconst LogosSection = () => {\n  const [logos, setLogos] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Simular llamada a una API para obtener logos\n    const fetchLogos = async () => {\n      try {\n        setIsLoading(true);\n        // En un caso real, aquí harías una petición fetch o axios a tu backend\n        // Ejemplo: const response = await fetch('/api/public/logos');\n        // const data = await response.json();\n        \n        // Datos de ejemplo (los mismos que teníamos)\n        const exampleLogos = [\n          { id: 1, name: 'Kibot', src: '/logos/kibot.png' },\n          { id: 2, name: 'Kexe', src: '/logos/kexe.png' },\n          { id: 3, name: 'Kuvo', src: '/logos/kuvo.png' },\n          // Añade más logos según sea necesario\n        ];\n\n        // Simular un delay de red\n        setTimeout(() => {\n          setLogos(exampleLogos);\n          setIsLoading(false);\n        }, 1000);\n\n      } catch (err) {\n        setError(err);\n        setIsLoading(false);\n      }\n    };\n\n    fetchLogos();\n  }, []); // El array vacío asegura que esto se ejecute solo una vez al montar\n\n  if (isLoading) {\n    return <section className={styles.logosSection}><div className={styles.container}><p>Cargando logos...</p></div></section>;\n  }\n\n  if (error) {\n    return <section className={styles.logosSection}><div className={styles.container}><p>Error al cargar logos: {error.message}</p></div></section>;\n  }\n\n  return (\n    <section className={styles.logosSection}>\n      <div className={styles.container}>\n        <h2 className={styles.heading}>Verificado por las marcas más dinámicas en mercados emergentes</h2>\n        <div className={styles.logosGrid}>\n          {logos.map(logo => (\n            <div key={logo.id} className={styles.logoItem}>\n              {/* Si usas imágenes */}\n              {/* Asegúrate de que la ruta src sea correcta, ej: /logos/kibot.png si están en client/public */}\n              {/* <img src={logo.src} alt={logo.name} className={styles.logoImage} /> */}\n              {/* O si usas texto (como en la imagen original) */}\n              <span className={styles.logoText}>&lt;{logo.name}&gt;</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default LogosSection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}