{"ast":null,"code":"var _jsxFileName = \"/Users/alexramos/Repos/KexeMx/wharesponde/wharesponde/server/client/src/features/LogosSection/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from './LogosSection.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogosSection = () => {\n  _s();\n  const [logos, setLogos] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Realizar llamada a la API para obtener logos desde el backend\n    const fetchLogos = async () => {\n      try {\n        setIsLoading(true);\n        // Usar la ruta relativa al backend\n        const response = await fetch('/api/admin/get_brands');\n        const result = await response.json();\n        if (result.success) {\n          // La API devuelve los logos en result.data\n          setLogos(result.data);\n          setError(null); // Limpiar cualquier error previo\n        } else {\n          // Manejar caso de error si la API devuelve success: false\n          setError(new Error(result.msg || 'Error fetching logos'));\n          setLogos([]); // Limpiar logos en caso de error\n        }\n      } catch (err) {\n        // Manejar errores de red o de la petición\n        console.error('Error fetching logos:', err);\n        setError(err);\n        setLogos([]); // Limpiar logos en caso de error\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchLogos();\n  }, []); // El array vacío asegura que esto se ejecute solo una vez al montar\n\n  const handleImageError = (event, filename) => {\n    console.error(`Error loading image: /media/${filename}`, event);\n    // Opcional: Ocultar la imagen con error o mostrar un placeholder alternativo\n    // event.target.style.display = 'none';\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.logosSection,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Cargando logos...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 87\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 53\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.logosSection,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Error al cargar logos: \", error.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 87\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 53\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n  if (logos.length === 0) {\n    return null; // No renderizar la sección si no hay logos\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.logosSection,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.heading,\n        children: \"Verificado por las marcas m\\xE1s din\\xE1micas en mercados emergentes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.logosGrid,\n        children: logos.map(logo => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.logoItem,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/media/${logo.filename}`,\n            alt: `Logo ${logo.id}`,\n            className: styles.logoImage,\n            onError: e => handleImageError(e, logo.filename)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, logo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(LogosSection, \"NDq5xgWUvMOMWnSTouEFN5A73Rc=\");\n_c = LogosSection;\nexport default LogosSection;\nvar _c;\n$RefreshReg$(_c, \"LogosSection\");","map":{"version":3,"names":["React","useState","useEffect","styles","jsxDEV","_jsxDEV","LogosSection","_s","logos","setLogos","isLoading","setIsLoading","error","setError","fetchLogos","response","fetch","result","json","success","data","Error","msg","err","console","handleImageError","event","filename","className","logosSection","children","container","fileName","_jsxFileName","lineNumber","columnNumber","message","length","heading","logosGrid","map","logo","logoItem","src","alt","id","logoImage","onError","e","_c","$RefreshReg$"],"sources":["/Users/alexramos/Repos/KexeMx/wharesponde/wharesponde/server/client/src/features/LogosSection/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from './LogosSection.module.css';\n\nconst LogosSection = () => {\n  const [logos, setLogos] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Realizar llamada a la API para obtener logos desde el backend\n    const fetchLogos = async () => {\n      try {\n        setIsLoading(true);\n        // Usar la ruta relativa al backend\n        const response = await fetch('/api/admin/get_brands');\n        const result = await response.json();\n\n        if (result.success) {\n          // La API devuelve los logos en result.data\n          setLogos(result.data);\n          setError(null); // Limpiar cualquier error previo\n        } else {\n          // Manejar caso de error si la API devuelve success: false\n          setError(new Error(result.msg || 'Error fetching logos'));\n          setLogos([]); // Limpiar logos en caso de error\n        }\n      } catch (err) {\n        // Manejar errores de red o de la petición\n        console.error('Error fetching logos:', err);\n        setError(err);\n        setLogos([]); // Limpiar logos en caso de error\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchLogos();\n  }, []); // El array vacío asegura que esto se ejecute solo una vez al montar\n\n  const handleImageError = (event, filename) => {\n    console.error(`Error loading image: /media/${filename}`, event);\n    // Opcional: Ocultar la imagen con error o mostrar un placeholder alternativo\n    // event.target.style.display = 'none';\n  };\n\n  if (isLoading) {\n    return <section className={styles.logosSection}><div className={styles.container}><p>Cargando logos...</p></div></section>;\n  }\n\n  if (error) {\n    return <section className={styles.logosSection}><div className={styles.container}><p>Error al cargar logos: {error.message}</p></div></section>;\n  }\n\n  if (logos.length === 0) {\n     return null; // No renderizar la sección si no hay logos\n  }\n\n  return (\n    <section className={styles.logosSection}>\n      <div className={styles.container}>\n        <h2 className={styles.heading}>Verificado por las marcas más dinámicas en mercados emergentes</h2>\n        <div className={styles.logosGrid}>\n          {logos.map(logo => (\n            <div key={logo.id} className={styles.logoItem}>\n              {/* Usar la imagen del logo obtenida de la API */}\n              {/* Asumiendo que las imágenes están en client/public/media/ */}\n              <img \n                src={`/media/${logo.filename}`}\n                alt={`Logo ${logo.id}`}\n                className={styles.logoImage}\n                onError={(e) => handleImageError(e, logo.filename)}\n              />\n              {/* Si prefieres mostrar el nombre del archivo como texto si no hay imagen visible */}\n              {/* <span className={styles.logoText}>{logo.filename}</span> */}\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default LogosSection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}